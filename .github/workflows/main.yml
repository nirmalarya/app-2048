name: Build and Push to ECR on Tag

on:
  push:
    tags:
      - "v*" # Match tags starting with 'v'
    paths:
      - "web-ingestion/app/*"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: web-ingestion
      AWS_REGION: us-east-1 # Update with your AWS region
      VAULT_ROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
      VAULT_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}
      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set Vault environment variables
        run: |
          echo "export VAULT_ROLE_ID=${VAULT_ROLE_ID}" >> $GITHUB_ENV
          echo "export VAULT_SECRET_ID=${VAULT_SECRET_ID}" >> $GITHUB_ENV
          echo "export VAULT_ADDR=${VAULT_ADDR}" >> $GITHUB_ENV

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries: ${{ secrets.AWS_REGISTRY_URL }}
          registry-type: "private"
          mask-password: true
          skip-logout: false
      - name: Create ECR repository if it does not exist
        run: |
          aws ecr describe-repositories --repository-names ${{ env.IMAGE_NAME }} || aws ecr create-repository --repository-name ${{ env.IMAGE_NAME }}
        env:
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

      - name: Build and tag Docker image
        run: |
          # Extract the GitHub tag name from GITHUB_REF (e.g., refs/tags/v2.5)
          IMAGE_TAG=$(echo "${GITHUB_REF#refs/tags/}")
          echo "GitHub Tag Name: $IMAGE_TAG"

          # Build the Docker image and tag it dynamically with the GitHub tag name
          docker build -t ${{ secrets.AWS_REGISTRY_URL }}/${{ env.IMAGE_NAME }}:$IMAGE_TAG --build-arg VAULT_ROLE_ID=${VAULT_ROLE_ID} --build-arg VAULT_SECRET_ID=${VAULT_SECRET_ID} --build-arg VAULT_ADDR=${VAULT_ADDR} web-ingestion/app/

          # Tag the image with ECR repository URI and GitHub tag name
          docker tag ${{ secrets.AWS_REGISTRY_URL }}/${{ env.IMAGE_NAME }}:$IMAGE_TAG ${{ secrets.AWS_REGISTRY_URL }}/${{ env.IMAGE_NAME }}:$IMAGE_TAG

      - name: Push Docker image to Amazon ECR
        run: docker push ${{ secrets.AWS_REGISTRY_URL }}/${{ env.IMAGE_NAME }}:$IMAGE_TAG

        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
